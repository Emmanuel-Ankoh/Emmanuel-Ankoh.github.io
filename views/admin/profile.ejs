<%- include('../partials/head', { title }) %>
<main id="main" class="container">
  <h1>Profile</h1>
  <% if (error) { %><div class="alert error"><%= error %></div><% } %>
  <% if (success) { %><div class="alert success"><%= success %></div><% } %>
  <form method="POST" action="/admin/profile" enctype="multipart/form-data" class="contact-form" style="max-width:720px">
    <input type="hidden" name="_csrf" value="<%= csrfToken %>">
    <label>Name</label>
    <input name="name" value="<%= settings && settings.name || '' %>" required />
    <label>Headline</label>
    <input name="headline" value="<%= settings && settings.headline || '' %>" required />
    <label>Summary</label>
    <textarea name="summary" rows="5" required><%= settings && settings.summary || '' %></textarea>
    <div class="grid" style="grid-template-columns:1fr 1fr;gap:1rem">
      <div>
        <label>Primary CTA Text</label>
        <input name="homeCtaPrimaryText" value="<%= settings && settings.homeCta && settings.homeCta.primaryText || '' %>" />
      </div>
      <div>
        <label>Primary CTA URL</label>
        <input name="homeCtaPrimaryUrl" value="<%= settings && settings.homeCta && settings.homeCta.primaryUrl || '' %>" />
      </div>
      <div>
        <label>Secondary CTA Text</label>
        <input name="homeCtaSecondaryText" value="<%= settings && settings.homeCta && settings.homeCta.secondaryText || '' %>" />
      </div>
      <div>
        <label>Secondary CTA URL</label>
        <input name="homeCtaSecondaryUrl" value="<%= settings && settings.homeCta && settings.homeCta.secondaryUrl || '' %>" />
      </div>
    </div>
    <label>Avatar</label>
    <% if (settings && settings.avatarUrl) { %>
      <img src="<%= settings.avatarUrl %>" alt="Avatar" style="width:160px;height:160px;border-radius:50%;border:1px solid var(--border);margin-bottom:.5rem" />
    <% } %>
    <input type="file" name="avatar" accept="image/*" />
    <small>Or paste avatar URL:</small>
    <input name="avatarUrl" value="<%= settings && settings.avatarUrl || '' %>" />
    <label>Resume URL</label>
    <input name="resumeUrl" value="<%= settings && settings.resumeUrl || '' %>" />
    <label>Contact Intro</label>
    <input name="contactIntro" value="<%= settings && settings.contactIntro || '' %>" />
    <fieldset style="border:1px solid var(--border);padding:1rem;border-radius:.5rem">
      <legend>Social Links</legend>
      <div class="grid" style="grid-template-columns:1fr 1fr;gap:1rem">
        <div>
          <label>GitHub</label>
          <input name="socials.github" value="<%= settings && settings.socials && settings.socials.github || '' %>" />
        </div>
        <div>
          <label>LinkedIn</label>
          <input name="socials.linkedin" value="<%= settings && settings.socials && settings.socials.linkedin || '' %>" />
        </div>
        <div>
          <label>Twitter</label>
          <input name="socials.twitter" value="<%= settings && settings.socials && settings.socials.twitter || '' %>" />
        </div>
        <div>
          <label>Email</label>
          <input name="socials.email" value="<%= settings && settings.socials && settings.socials.email || '' %>" />
        </div>
      </div>
    </fieldset>

  <label>About Body</label>
  <div id="about-editor" style="min-height:180px;background:var(--card);border:1px solid var(--border);border-radius:.5rem"></div>
  <textarea name="aboutBody" rows="6" style="display:none"><%= settings && settings.aboutBody || '' %></textarea>

    <fieldset style="border:1px solid var(--border);padding:1rem;border-radius:.5rem;margin-top:1rem">
      <legend>Timeline</legend>
      <div id="timeline-list" class="repeater"></div>
      <input type="hidden" name="timeline" id="timeline-json" />
      <div class="toolbar">
        <div></div>
        <button type="button" class="btn" id="add-timeline">+ Add Timeline Item</button>
      </div>
    </fieldset>

    <fieldset style="border:1px solid var(--border);padding:1rem;border-radius:.5rem;margin-top:1rem">
      <legend>Skills</legend>
      <div id="skills-list" class="repeater"></div>
      <input type="hidden" name="skills" id="skills-json" />
      <div class="toolbar">
        <div></div>
        <button type="button" class="btn" id="add-skill">+ Add Skill</button>
      </div>
    </fieldset>

    <link href="https://cdn.quilljs.com/1.3.7/quill.snow.css" rel="stylesheet">
    <script src="https://cdn.quilljs.com/1.3.7/quill.min.js"></script>
    <script id="initial-timeline" type="application/json"><%- JSON.stringify((settings && settings.timeline) || []) %></script>
    <script id="initial-skills" type="application/json"><%- JSON.stringify((settings && settings.skills) || []) %></script>
    <script>
      (function(){
        // Quill editor setup for About Body
        const form = document.currentScript.closest('form');
        const aboutEditor = document.getElementById('about-editor');
        const aboutTextarea = form.querySelector('textarea[name="aboutBody"]');
        let quill = null;
        if (aboutEditor && window.Quill) {
          quill = new Quill(aboutEditor, {
            theme: 'snow',
            modules: {
              toolbar: [
                ['bold','italic','underline','strike'],
                [{ header: [1,2,3,false] }],
                [{ list: 'ordered' }, { list: 'bullet' }],
                ['blockquote','code-block'],
                ['link'],
                ['clean']
              ]
            }
          });
          quill.root.innerHTML = aboutTextarea.value || '';
        }
        const initialTimeline = JSON.parse((document.getElementById('initial-timeline')?.textContent)||'[]');
        const initialSkills = JSON.parse((document.getElementById('initial-skills')?.textContent)||'[]');

        const tList = document.getElementById('timeline-list');
        const sList = document.getElementById('skills-list');
        const tJson = document.getElementById('timeline-json');
        const sJson = document.getElementById('skills-json');
        const addT = document.getElementById('add-timeline');
        const addS = document.getElementById('add-skill');
  // form defined above

        function timelineItem(data={}){
          const wrap = document.createElement('div');
          wrap.className = 'item timeline-item';
          wrap.innerHTML = `
            <div>
              <label>Year</label>
              <input type="text" class="t-year" value="${data.year||''}">
            </div>
            <div>
              <label>Title</label>
              <input type="text" class="t-title" value="${data.title||''}">
            </div>
            <div>
              <label>Subtitle</label>
              <input type="text" class="t-subtitle" value="${data.subtitle||''}">
            </div>
            <div>
              <label>Description</label>
              <textarea rows="3" class="t-description">${data.description||''}</textarea>
            </div>
            <div style="grid-column:1 / -1;text-align:right">
              <button type="button" class="btn danger t-remove">Remove</button>
            </div>
          `;
          wrap.querySelector('.t-remove').addEventListener('click', ()=>{
            wrap.remove();
            serialize();
          });
          return wrap;
        }

        function skillItem(data={}){
          const wrap = document.createElement('div');
          wrap.className = 'item skill-item';
          wrap.innerHTML = `
            <div>
              <label>Name</label>
              <input type="text" class="s-name" value="${data.name||''}">
            </div>
            <div>
              <label>Level (0-100)</label>
              <input type="number" min="0" max="100" class="s-level" value="${typeof data.level==='number'?data.level:''}">
            </div>
            <div style="grid-column:1 / -1;text-align:right">
              <button type="button" class="btn danger s-remove">Remove</button>
            </div>
          `;
          wrap.querySelector('.s-remove').addEventListener('click', ()=>{
            wrap.remove();
            serialize();
          });
          return wrap;
        }

        function serialize(){
          const t = Array.from(tList.querySelectorAll('.timeline-item')).map(el=>({
            year: el.querySelector('.t-year').value.trim(),
            title: el.querySelector('.t-title').value.trim(),
            subtitle: el.querySelector('.t-subtitle').value.trim(),
            description: el.querySelector('.t-description').value.trim()
          })).filter(x=>x.year || x.title || x.subtitle || x.description);
          const s = Array.from(sList.querySelectorAll('.skill-item')).map(el=>({
            name: el.querySelector('.s-name').value.trim(),
            level: Number(el.querySelector('.s-level').value || 0)
          })).filter(x=>x.name);
          tJson.value = JSON.stringify(t);
          sJson.value = JSON.stringify(s);
        }

        addT.addEventListener('click', ()=>{
          tList.appendChild(timelineItem());
          serialize();
        });
        addS.addEventListener('click', ()=>{
          sList.appendChild(skillItem());
          serialize();
        });

        // init from existing
        (initialTimeline.length?initialTimeline:[{}]).forEach(item=>tList.appendChild(timelineItem(item)));
        (initialSkills.length?initialSkills:[{}]).forEach(item=>sList.appendChild(skillItem(item)));
        serialize();

        // update JSON on any input change
        form.addEventListener('input', (e)=>{
          if (form.contains(e.target)) serialize();
        });
        form.addEventListener('submit', (e)=>{
          serialize();
          // Sync Quill -> textarea
          if (quill) {
            aboutTextarea.value = quill.root.innerHTML;
          }
          // Allow empty About Body (server will sanitize)
          // Enforce CTA pairs
          const pText = form.querySelector('input[name="homeCtaPrimaryText"]').value.trim();
          const pUrl = form.querySelector('input[name="homeCtaPrimaryUrl"]').value.trim();
          const sText = form.querySelector('input[name="homeCtaSecondaryText"]').value.trim();
          const sUrl = form.querySelector('input[name="homeCtaSecondaryUrl"]').value.trim();
          if ((pText && !pUrl) || (!pText && pUrl)) {
            e.preventDefault();
            alert('Primary CTA text and URL must both be provided.');
            return false;
          }
          if ((sText && !sUrl) || (!sText && sUrl)) {
            e.preventDefault();
            alert('Secondary CTA text and URL must both be provided.');
            return false;
          }
        });
      })();
    </script>
    <div class="toolbar">
      <div></div>
      <button class="btn btn-primary" type="submit">Save</button>
    </div>
  </form>
</main>
<%- include('../partials/footer') %>
