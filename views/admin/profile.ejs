<%- include('partials/layout-start', { title }) %>
<% const settingsData = settings || {}; %>
<% const socials = settingsData.socials || {}; %>
<% const homeCta = settingsData.homeCta || {}; %>
<% const homeCopy = settingsData.homeCopy || {}; %>
<% const heroSecondaryItemsText = Array.isArray(homeCopy.heroSecondaryItems)
  ? homeCopy.heroSecondaryItems
      .filter(item => item && (item.label || item.value))
      .map(item => [item.label || '', item.value || ''].filter(Boolean).join(' | '))
      .join('\n')
  : ''; %>
<main class="container-fluid py-4">
  <section class="d-flex flex-column gap-4">
    <div class="d-flex flex-wrap align-items-start justify-content-between gap-3">
      <div>
        <h1 class="h3 mb-1">Profile & Homepage Copy</h1>
        <p class="text-muted mb-0">Keep your public site in sync with your latest positioning, hero narrative, and testimonials.</p>
      </div>
      <% if (settingsData && settingsData.updatedAt) { %>
        <small class="text-muted">Last updated <%= new Date(settingsData.updatedAt).toLocaleString() %></small>
      <% } %>
    </div>

    <% if (error) { %>
      <div class="alert alert-danger" role="alert"><%= error %></div>
    <% } %>
    <% if (success) { %>
      <div class="alert alert-success" role="alert"><%= success %></div>
    <% } %>

    <form method="POST" action="/admin/profile" enctype="multipart/form-data" class="d-flex flex-column gap-4">
      <input type="hidden" name="_csrf" value="<%= csrfToken %>">

      <div class="row g-4">
        <div class="col-xxl-8 d-flex flex-column gap-4">
          <section class="card p-4 shadow-sm">
            <div class="d-flex justify-content-between align-items-start flex-wrap gap-2 mb-3">
              <div>
                <span class="badge bg-secondary-subtle text-uppercase text-secondary-emphasis mb-2">Brand overview</span>
                <h2 class="h5 mb-1">Professional identity</h2>
                <p class="text-muted mb-0">Update the baseline copy that appears across the portfolio.</p>
              </div>
            </div>
            <div class="row g-3">
              <div class="col-md-6">
                <label class="form-label">Name</label>
                <input class="form-control" name="name" value="<%= settingsData.name || '' %>" required>
              </div>
              <div class="col-md-6">
                <label class="form-label">Headline</label>
                <input class="form-control" name="headline" value="<%= settingsData.headline || '' %>" required>
              </div>
              <div class="col-12">
                <label class="form-label">Summary</label>
                <textarea class="form-control" name="summary" rows="3" required><%= settingsData.summary || '' %></textarea>
              </div>
              <div class="col-12">
                <label class="form-label">Mission statement</label>
                <textarea class="form-control" name="mission" rows="3" placeholder="Short blurb for hero or skills pages"><%= settingsData.mission || '' %></textarea>
              </div>
              <div class="col-12">
                <label class="form-label">Contact intro</label>
                <input class="form-control" name="contactIntro" value="<%= settingsData.contactIntro || '' %>">
              </div>
            </div>
          </section>

          <section class="card p-4 shadow-sm">
            <div class="d-flex justify-content-between align-items-start flex-wrap gap-2 mb-3">
              <div>
                <span class="badge bg-secondary-subtle text-uppercase text-secondary-emphasis mb-2">Hero</span>
                <h2 class="h5 mb-1">Homepage hero narrative & CTAs</h2>
                <p class="text-muted mb-0">Craft the first impression visitors see on the landing page.</p>
              </div>
            </div>
            <div class="row g-3">
              <div class="col-sm-6">
                <label class="form-label">Hero greeting</label>
                <input class="form-control" name="homeHeroGreeting" value="<%= homeCopy.heroGreeting || '' %>" placeholder="Hi, I'm">
              </div>
              <div class="col-sm-6">
                <label class="form-label">Hero highlight phrase</label>
                <input class="form-control" name="homeHeroHighlight" value="<%= homeCopy.heroHighlight || '' %>" placeholder="elegant digital experiences">
              </div>
              <div class="col-12">
                <label class="form-label">Hero statement</label>
                <textarea class="form-control" name="homeHeroStatement" rows="2" placeholder="I craft elegant digital experiences that deliver measurable impact."><%= homeCopy.heroStatement || '' %></textarea>
                <div class="form-text">Tip: the highlight phrase will be emphasised if it appears inside this sentence.</div>
              </div>
              <div class="col-sm-6">
                <label class="form-label">Secondary card title</label>
                <input class="form-control" name="homeHeroSecondaryTitle" value="<%= homeCopy.heroSecondaryTitle || '' %>" placeholder="Currently focused on">
              </div>
              <div class="col-sm-6">
                <label class="form-label">Secondary card items</label>
                <textarea class="form-control" name="homeHeroSecondaryItemsText" rows="3" placeholder="Label | Value"><%= heroSecondaryItemsText %></textarea>
                <div class="form-text">One entry per line. Provide custom hero stats (e.g., Craft | Product Engineer).</div>
              </div>
            </div>
            <hr class="my-4">
            <div class="row g-3">
              <div class="col-md-6">
                <label class="form-label">Primary CTA text</label>
                <input class="form-control" name="homeCtaPrimaryText" value="<%= homeCta.primaryText || '' %>" placeholder="View Projects">
              </div>
              <div class="col-md-6">
                <label class="form-label">Primary CTA URL</label>
                <input class="form-control" name="homeCtaPrimaryUrl" value="<%= homeCta.primaryUrl || '' %>" placeholder="/projects">
              </div>
              <div class="col-md-6">
                <label class="form-label">Secondary CTA text</label>
                <input class="form-control" name="homeCtaSecondaryText" value="<%= homeCta.secondaryText || '' %>" placeholder="Book a discovery call">
              </div>
              <div class="col-md-6">
                <label class="form-label">Secondary CTA URL</label>
                <input class="form-control" name="homeCtaSecondaryUrl" value="<%= homeCta.secondaryUrl || '' %>" placeholder="/contact">
              </div>
            </div>
          </section>

          <section class="card p-4 shadow-sm" id="advanced">
            <div class="d-flex justify-content-between align-items-start flex-wrap gap-2 mb-3">
              <div>
                <span class="badge bg-secondary-subtle text-uppercase text-secondary-emphasis mb-2">Sections</span>
                <h2 class="h5 mb-1">Homepage section copy</h2>
                <p class="text-muted mb-0">Control the headings and supporting copy for each section.</p>
              </div>
            </div>
            <div class="row g-4">
              <div class="col-md-6">
                <label class="form-label">Capabilities heading</label>
                <input class="form-control" name="homeCapabilitiesHeading" value="<%= homeCopy.capabilitiesHeading || '' %>">
              </div>
              <div class="col-md-6">
                <label class="form-label">Capabilities lead</label>
                <textarea class="form-control" name="homeCapabilitiesLead" rows="2"><%= homeCopy.capabilitiesLead || '' %></textarea>
              </div>
              <div class="col-md-6">
                <label class="form-label">Experience heading</label>
                <input class="form-control" name="homeExperienceHeading" value="<%= homeCopy.experienceHeading || '' %>">
              </div>
              <div class="col-md-6">
                <label class="form-label">Experience lead</label>
                <textarea class="form-control" name="homeExperienceLead" rows="2"><%= homeCopy.experienceLead || '' %></textarea>
              </div>
              <div class="col-md-6">
                <label class="form-label">Timeline heading</label>
                <input class="form-control" name="homeTimelineHeading" value="<%= homeCopy.timelineHeading || '' %>">
              </div>
              <div class="col-md-6">
                <label class="form-label">Timeline lead</label>
                <textarea class="form-control" name="homeTimelineLead" rows="2"><%= homeCopy.timelineLead || '' %></textarea>
              </div>
              <div class="col-md-6">
                <label class="form-label">Skills heading</label>
                <input class="form-control" name="homeSkillsHeading" value="<%= homeCopy.skillsHeading || '' %>">
              </div>
              <div class="col-md-6">
                <label class="form-label">Skills lead</label>
                <textarea class="form-control" name="homeSkillsLead" rows="2"><%= homeCopy.skillsLead || '' %></textarea>
              </div>
              <div class="col-md-6">
                <label class="form-label">Feature section heading</label>
                <input class="form-control" name="homeFeatureHeading" value="<%= homeCopy.featureHeading || '' %>">
              </div>
              <div class="col-md-6">
                <label class="form-label">Feature section lead</label>
                <textarea class="form-control" name="homeFeatureLead" rows="2"><%= homeCopy.featureLead || '' %></textarea>
              </div>
              <div class="col-md-6">
                <label class="form-label">Testimonials heading</label>
                <input class="form-control" name="homeTestimonialsHeading" value="<%= homeCopy.testimonialsHeading || '' %>">
              </div>
              <div class="col-md-6">
                <label class="form-label">Testimonials lead</label>
                <textarea class="form-control" name="homeTestimonialsLead" rows="2"><%= homeCopy.testimonialsLead || '' %></textarea>
              </div>
              <div class="col-md-6">
                <label class="form-label">Notes heading</label>
                <input class="form-control" name="homeNotesHeading" value="<%= homeCopy.notesHeading || '' %>">
              </div>
              <div class="col-md-6">
                <label class="form-label">Notes lead</label>
                <textarea class="form-control" name="homeNotesLead" rows="2"><%= homeCopy.notesLead || '' %></textarea>
              </div>
            </div>
          </section>

          <section class="card p-4 shadow-sm">
            <div class="d-flex justify-content-between align-items-start flex-wrap gap-2 mb-3">
              <div>
                <span class="badge bg-secondary-subtle text-uppercase text-secondary-emphasis mb-2">Closing</span>
                <h2 class="h5 mb-1">Closing call-to-action</h2>
                <p class="text-muted mb-0">End the homepage with a compelling invitation to collaborate.</p>
              </div>
            </div>
            <div class="row g-3">
              <div class="col-12">
                <label class="form-label">Closing heading</label>
                <input class="form-control" name="homeClosingHeading" value="<%= homeCopy.closingHeading || '' %>">
              </div>
              <div class="col-12">
                <label class="form-label">Closing lead</label>
                <textarea class="form-control" name="homeClosingLead" rows="3"><%= homeCopy.closingLead || '' %></textarea>
              </div>
            </div>
            <hr class="my-4">
            <div class="row g-3">
              <div class="col-md-6">
                <label class="form-label">Primary button text</label>
                <input class="form-control" name="homeClosingPrimaryText" value="<%= homeCopy.closingPrimaryText || '' %>" placeholder="Start a project">
              </div>
              <div class="col-md-6">
                <label class="form-label">Primary button URL</label>
                <input class="form-control" name="homeClosingPrimaryUrl" value="<%= homeCopy.closingPrimaryUrl || '' %>" placeholder="/contact">
              </div>
              <div class="col-md-6">
                <label class="form-label">Secondary link text</label>
                <input class="form-control" name="homeClosingSecondaryText" value="<%= homeCopy.closingSecondaryText || '' %>" placeholder="Email directly">
              </div>
              <div class="col-md-6">
                <label class="form-label">Secondary link URL</label>
                <input class="form-control" name="homeClosingSecondaryUrl" value="<%= homeCopy.closingSecondaryUrl || '' %>" placeholder="mailto:hello@example.com">
              </div>
            </div>
          </section>

          <section class="card p-4 shadow-sm">
            <div class="d-flex justify-content-between align-items-start flex-wrap gap-2 mb-3">
              <div>
                <span class="badge bg-secondary-subtle text-uppercase text-secondary-emphasis mb-2">About</span>
                <h2 class="h5 mb-1">Long-form about narrative</h2>
                <p class="text-muted mb-0">This rich text appears on the public About page.</p>
              </div>
            </div>
            <div class="mb-2" id="about-editor" style="min-height:220px;background:rgba(20,24,33,.6);border:1px solid #222636;border-radius:.75rem"></div>
            <textarea name="aboutBody" rows="6" style="display:none"><%= settingsData.aboutBody || '' %></textarea>
          </section>
        </div>

        <div class="col-xxl-4 d-flex flex-column gap-4">
          <section class="card p-4 shadow-sm">
            <div class="d-flex justify-content-between align-items-start flex-wrap gap-2 mb-3">
              <div>
                <span class="badge bg-secondary-subtle text-uppercase text-secondary-emphasis mb-2">Profile</span>
                <h2 class="h5 mb-1">Media & availability</h2>
                <p class="text-muted mb-0">Keep your supporting details current.</p>
              </div>
            </div>
            <div class="d-flex align-items-center gap-3 mb-3">
              <img id="avatar-preview" src="<%= settingsData.avatarUrl || '/images/placeholder.svg' %>" alt="Current avatar" class="rounded-circle border" style="width:96px;height:96px;object-fit:cover;border-color:#222636 !important;">
              <div class="d-flex flex-column gap-2">
                <div class="d-flex flex-wrap gap-2">
                  <input id="avatar-input" type="file" name="avatar" accept="image/*" class="d-none">
                  <button type="button" class="btn btn-outline-light btn-sm" id="choose-avatar">Choose image</button>
                  <button type="submit" class="btn btn-primary btn-sm" name="do" value="uploadAvatar">Upload avatar</button>
                </div>
                <small class="text-muted" id="avatar-filename">No file chosen</small>
                <small class="text-muted">Max 5MB. JPG/PNG/WebP recommended.</small>
              </div>
            </div>
            <div class="row g-3">
              <div class="col-12">
                <label class="form-label">Location</label>
                <input class="form-control" name="location" value="<%= settingsData.location || '' %>" placeholder="City, Country">
              </div>
              <div class="col-12">
                <label class="form-label">Phone</label>
                <input class="form-control" name="phone" value="<%= settingsData.phone || '' %>" placeholder="+233...">
              </div>
              <div class="col-12">
                <label class="form-label">Résumé URL</label>
                <input class="form-control" name="resumeUrl" value="<%= settingsData.resumeUrl || '' %>" placeholder="https://">
              </div>
              <div class="col-12">
                <div class="form-check form-switch">
                  <input class="form-check-input" type="checkbox" role="switch" id="availabilitySwitch" name="availability" <%= settingsData.availability ? 'checked' : '' %>>
                  <label class="form-check-label" for="availabilitySwitch">Open to new opportunities</label>
                </div>
              </div>
            </div>
          </section>

          <section class="card p-4 shadow-sm">
            <div class="d-flex justify-content-between align-items-start flex-wrap gap-2 mb-3">
              <div>
                <span class="badge bg-secondary-subtle text-uppercase text-secondary-emphasis mb-2">Channels</span>
                <h2 class="h5 mb-1">Social & contact links</h2>
                <p class="text-muted mb-0">Links power your hero buttons and contact options.</p>
              </div>
            </div>
            <div class="row g-3">
              <div class="col-sm-6">
                <label class="form-label">Email</label>
                <input class="form-control" name="socials.email" value="<%= socials.email || '' %>">
              </div>
              <div class="col-sm-6">
                <label class="form-label">GitHub</label>
                <input class="form-control" name="socials.github" value="<%= socials.github || '' %>">
              </div>
              <div class="col-sm-6">
                <label class="form-label">LinkedIn</label>
                <input class="form-control" name="socials.linkedin" value="<%= socials.linkedin || '' %>">
              </div>
              <div class="col-sm-6">
                <label class="form-label">Twitter / X</label>
                <input class="form-control" name="socials.twitter" value="<%= socials.twitter || '' %>">
              </div>
              <div class="col-sm-6">
                <label class="form-label">Instagram</label>
                <input class="form-control" name="socials.instagram" value="<%= socials.instagram || '' %>">
              </div>
              <div class="col-sm-6">
                <label class="form-label">YouTube</label>
                <input class="form-control" name="socials.youtube" value="<%= socials.youtube || '' %>">
              </div>
              <div class="col-sm-6">
                <label class="form-label">Stack Overflow</label>
                <input class="form-control" name="socials.stackoverflow" value="<%= socials.stackoverflow || '' %>">
              </div>
            </div>
          </section>
        </div>
      </div>

      <section class="card p-4 shadow-sm">
        <div class="d-flex justify-content-between align-items-start flex-wrap gap-2 mb-3">
          <div>
            <span class="badge bg-secondary-subtle text-uppercase text-secondary-emphasis mb-2">Timeline</span>
            <h2 class="h5 mb-1">Career timeline</h2>
            <p class="text-muted mb-0">Add recent milestones to spotlight your journey.</p>
          </div>
        </div>
        <small class="text-muted">Format: year | title | subtitle | description (one entry per line).</small>
        <div id="timeline-list" class="repeater d-flex flex-column gap-2 mt-3"></div>
        <div class="mt-2">
          <button type="button" class="btn btn-outline-light btn-sm" id="add-timeline-item">Add timeline item</button>
        </div>
        <textarea name="timelineText" style="display:none"><%=(Array.isArray(settingsData.timeline) ? (settingsData.timeline.map(function(it){
          var parts=[]; if (it.year) parts.push(it.year); if (it.title) parts.push(it.title); if (it.subtitle) parts.push(it.subtitle); if (it.description) parts.push(it.description);
          return parts.join(' | ');
        }).join('\n')) : '') %></textarea>
      </section>

      <section class="card p-4 shadow-sm">
        <div class="d-flex justify-content-between align-items-start flex-wrap gap-2 mb-3">
          <div>
            <span class="badge bg-secondary-subtle text-uppercase text-secondary-emphasis mb-2">Skills</span>
            <h2 class="h5 mb-1">Core skills</h2>
            <p class="text-muted mb-0">List individual skills with optional proficiency levels.</p>
          </div>
        </div>
        <small class="text-muted">Format: Name:Level (0-100) or Name (Level%).</small>
        <div id="skills-list" class="repeater d-flex flex-column gap-2 mt-3"></div>
        <div class="mt-2">
          <button type="button" class="btn btn-outline-light btn-sm" id="add-skill-item">Add skill</button>
        </div>
        <textarea name="skillsText" style="display:none"><%=(Array.isArray(settingsData.skills) ? (settingsData.skills.map(function(s){
          var lvl = (typeof s.level === 'number' ? s.level : '');
          return (s.name || '') + (lvl!=='' ? (':' + lvl) : '');
        }).join('\n')) : '') %></textarea>
      </section>

      <section class="card p-4 shadow-sm">
        <div class="d-flex justify-content-between align-items-start flex-wrap gap-2 mb-3">
          <div>
            <span class="badge bg-secondary-subtle text-uppercase text-secondary-emphasis mb-2">Groups</span>
            <h2 class="h5 mb-1">Skill categories</h2>
            <p class="text-muted mb-0">Organise your stack into thematic groups (e.g., Frontend, Platform).</p>
          </div>
        </div>
        <small class="text-muted">Each category can list skills using the same format as above.</small>
        <div id="skill-groups-list" class="d-flex flex-column gap-3 mt-3"></div>
        <div class="mt-2">
          <button type="button" class="btn btn-outline-light btn-sm" id="add-skill-group">Add category</button>
        </div>
        <textarea name="skillGroupsJson" style="display:none"><%- JSON.stringify(Array.isArray(settingsData.skillGroups) ? settingsData.skillGroups : []) %></textarea>
      </section>

      <section class="card p-4 shadow-sm">
        <div class="d-flex justify-content-between align-items-start flex-wrap gap-2 mb-3">
          <div>
            <span class="badge bg-secondary-subtle text-uppercase text-secondary-emphasis mb-2">Testimonials</span>
            <h2 class="h5 mb-1">Social proof</h2>
            <p class="text-muted mb-0">Showcase what collaborators and clients say about working with you.</p>
          </div>
        </div>
        <small class="text-muted">Format: Name | Role | Quote | Avatar URL (optional) | Link (optional).</small>
        <div id="testimonials-list" class="repeater d-flex flex-column gap-2 mt-3"></div>
        <div class="mt-2">
          <button type="button" class="btn btn-outline-light btn-sm" id="add-testimonial-item">Add testimonial</button>
        </div>
        <textarea name="testimonialsText" style="display:none"><%=(Array.isArray(settingsData.testimonials) ? (settingsData.testimonials.map(function(t){
          var parts=[]; if (t.name) parts.push(t.name); if (t.role) parts.push(t.role); if (t.quote) parts.push(t.quote); if (t.avatarUrl) parts.push(t.avatarUrl); if (t.link) parts.push(t.link);
          return parts.join(' | ');
        }).join('\n')) : '') %></textarea>
      </section>

      <section class="card p-4 shadow-sm">
        <div class="d-flex justify-content-between align-items-start flex-wrap gap-2 mb-3">
          <div>
            <span class="badge bg-secondary-subtle text-uppercase text-secondary-emphasis mb-2">Knowledge</span>
            <h2 class="h5 mb-1">Notes & resources</h2>
            <p class="text-muted mb-0">Curate the posts or resources featured on the homepage.</p>
          </div>
        </div>
        <small class="text-muted">Format: Title | URL (optional) | Summary | Date (optional).</small>
        <div id="notes-list" class="repeater d-flex flex-column gap-2 mt-3"></div>
        <div class="mt-2">
          <button type="button" class="btn btn-outline-light btn-sm" id="add-note-item">Add entry</button>
        </div>
        <textarea name="notesText" style="display:none"><%=(Array.isArray(settingsData.notes) ? (settingsData.notes.map(function(n){
          var parts=[]; if (n.title) parts.push(n.title); if (n.url) parts.push(n.url); if (n.summary) parts.push(n.summary); if (n.date) parts.push(n.date);
          return parts.join(' | ');
        }).join('\n')) : '') %></textarea>
      </section>

      <div class="card p-4 shadow-sm d-flex flex-column flex-md-row align-items-start align-items-md-center justify-content-between gap-3">
        <div class="d-flex flex-column gap-1 text-muted">
          <span class="fw-semibold">Wrap up</span>
          <small>Preview in a new tab to confirm changes before sharing.</small>
        </div>
        <div class="d-flex flex-wrap gap-2">
          <a class="btn btn-outline-light" href="<%= (site && site.baseUrl) ? site.baseUrl : '/' %>" target="_blank" rel="noopener">Preview site</a>
          <button class="btn btn-primary" type="submit">Save changes</button>
        </div>
      </div>

      <link href="https://cdn.quilljs.com/1.3.7/quill.snow.css" rel="stylesheet">
      <script src="https://cdn.quilljs.com/1.3.7/quill.min.js"></script>
      <script>
        (function(){
          const form = document.currentScript.closest('form');
          const aboutEditor = document.getElementById('about-editor');
          const aboutTextarea = form.querySelector('textarea[name="aboutBody"]');
          if (aboutEditor && window.Quill) {
            const quill = new Quill(aboutEditor, {
              theme: 'snow',
              modules: { toolbar: [['bold','italic','underline','strike'],[{header:[1,2,3,false]}],[{list:'ordered'},{list:'bullet'}],['blockquote','code-block'],['link'],['clean']] }
            });
            quill.root.innerHTML = aboutTextarea.value || '';
            form.addEventListener('submit', ()=>{ aboutTextarea.value = quill.root.innerHTML; });
          }
        })();
      </script>
      <script>
        (function(){
          const form = document.currentScript.closest('form');
          const avatarInput = form.querySelector('#avatar-input');
          const avatarImg = form.querySelector('#avatar-preview');
          const chooseBtn = form.querySelector('#choose-avatar');
          const fileName = form.querySelector('#avatar-filename');
          if (chooseBtn && avatarInput) {
            chooseBtn.addEventListener('click', ()=> avatarInput.click());
          }
          if (avatarInput && avatarImg) {
            avatarInput.addEventListener('change', function(){
              const f = this.files && this.files[0];
              if (!f) return;
              if (fileName) fileName.textContent = f.name;
              const reader = new FileReader();
              reader.onload = e => { avatarImg.src = e.target.result; };
              reader.readAsDataURL(f);
            });
          }

          function setupSimpleRepeater(options){
            const { listSelector, hiddenSelector, addSelector, placeholder } = options;
            const list = form.querySelector(listSelector);
            const hidden = form.querySelector(hiddenSelector);
            const addBtn = form.querySelector(addSelector);
            if (!list || !hidden || !addBtn) return null;
            function makeRow(value){
              const row = document.createElement('div');
              row.className = 'd-flex gap-2 align-items-start flex-wrap';
              const input = document.createElement('input');
              input.type = 'text';
              input.placeholder = placeholder;
              input.className = 'form-control flex-grow-1';
              if (value) input.value = value;
              const remove = document.createElement('button');
              remove.type = 'button';
              remove.textContent = 'Remove';
              remove.className = 'btn btn-outline-danger btn-sm';
              remove.addEventListener('click', ()=>{ row.remove(); });
              row.appendChild(input);
              row.appendChild(remove);
              return row;
            }
            function loadFromHidden(){
              list.innerHTML='';
              const lines = (hidden.value || '').split(/\r?\n/).map(l=>l.trim()).filter(Boolean);
              if (!lines.length) { list.appendChild(makeRow('')); }
              else { lines.forEach(l=> list.appendChild(makeRow(l))); }
            }
            addBtn.addEventListener('click', ()=> list.appendChild(makeRow('')));
            loadFromHidden();
            return { list, hidden };
          }

          const timelineRepeater = setupSimpleRepeater({
            listSelector: '#timeline-list',
            hiddenSelector: 'textarea[name="timelineText"]',
            addSelector: '#add-timeline-item',
            placeholder: 'year | title | subtitle | description'
          });
          const skillsRepeater = setupSimpleRepeater({
            listSelector: '#skills-list',
            hiddenSelector: 'textarea[name="skillsText"]',
            addSelector: '#add-skill-item',
            placeholder: 'Name:Level or Name (Level%)'
          });
          const testimonialsRepeater = setupSimpleRepeater({
            listSelector: '#testimonials-list',
            hiddenSelector: 'textarea[name="testimonialsText"]',
            addSelector: '#add-testimonial-item',
            placeholder: 'Name | Role | Quote | Avatar URL | Link'
          });
          const notesRepeater = setupSimpleRepeater({
            listSelector: '#notes-list',
            hiddenSelector: 'textarea[name="notesText"]',
            addSelector: '#add-note-item',
            placeholder: 'Title | URL | Summary | Date'
          });

          (function(){
            const list = form.querySelector('#skill-groups-list');
            const hidden = form.querySelector('textarea[name="skillGroupsJson"]');
            const addBtn = form.querySelector('#add-skill-group');
            if (!list || !hidden || !addBtn) return;

            function parseSkillLine(line){
              let name = line.trim();
              let level;
              const colonIndex = line.indexOf(':');
              if (colonIndex !== -1) {
                name = line.slice(0, colonIndex).trim();
                const raw = line.slice(colonIndex + 1).trim().replace(/%$/, '');
                const num = parseInt(raw, 10);
                if (!Number.isNaN(num)) level = Math.max(0, Math.min(100, num));
              } else {
                const m2 = line.match(/^(.+?)\s*\((\d{1,3})%?\)$/);
                if (m2) {
                  name = m2[1].trim();
                  const num = parseInt(m2[2], 10);
                  if (!Number.isNaN(num)) level = Math.max(0, Math.min(100, num));
                }
              }
              return { name, level };
            }

            function formatSkills(skills){
              return (Array.isArray(skills) ? skills : [])
                .filter(s => s && s.name)
                .map(s => {
                  if (typeof s.level === 'number' && !Number.isNaN(s.level)) {
                    return `${s.name}:${s.level}`;
                  }
                  return s.name;
                })
                .join('\n');
            }

            function makeGroup(group){
              const wrapper = document.createElement('div');
              wrapper.dataset.skillGroup = 'true';
              wrapper.className = 'border border-secondary rounded-3 p-3 d-flex flex-column gap-2 bg-body-tertiary';
              const header = document.createElement('div');
              header.className = 'd-flex gap-2 align-items-center flex-wrap';
              const input = document.createElement('input');
              input.type = 'text';
              input.name = 'skill-group-title';
              input.placeholder = 'Category (e.g., Frontend)';
              input.className = 'form-control flex-grow-1';
              if (group && group.title) input.value = group.title;
              const remove = document.createElement('button');
              remove.type = 'button';
              remove.textContent = 'Remove';
              remove.className = 'btn btn-outline-danger btn-sm';
              remove.addEventListener('click', () => {
                wrapper.remove();
              });
              header.appendChild(input);
              header.appendChild(remove);
              const textarea = document.createElement('textarea');
              textarea.placeholder = 'One skill per line. Name:Level (0-100)';
              textarea.rows = 3;
              textarea.name = 'skill-group-skills';
              textarea.className = 'form-control';
              textarea.value = formatSkills(group && group.skills);
              wrapper.appendChild(header);
              wrapper.appendChild(textarea);
              return wrapper;
            }

            function load(){
              list.innerHTML = '';
              let initial = [];
              try {
                initial = JSON.parse(hidden.value || '[]');
                if (!Array.isArray(initial)) initial = [];
              } catch (e) {
                initial = [];
              }
              if (!initial.length) {
                list.appendChild(makeGroup({ title: '', skills: [] }));
              } else {
                initial.forEach(group => list.appendChild(makeGroup(group)));
              }
            }

            addBtn.addEventListener('click', () => {
              list.appendChild(makeGroup({ title: '', skills: [] }));
            });

            form.addEventListener('submit', () => {
              const groups = Array.from(list.querySelectorAll('[data-skill-group]')).map(el => {
                const title = (el.querySelector('input[name="skill-group-title"]')?.value || '').trim();
                const skillsRaw = (el.querySelector('textarea[name="skill-group-skills"]')?.value || '')
                  .split(/\r?\n/)
                  .map(l => l.trim())
                  .filter(Boolean)
                  .map(parseSkillLine)
                  .filter(item => item.name);
                return { title, skills: skillsRaw };
              }).filter(group => group.title || group.skills.length);
              hidden.value = JSON.stringify(groups);
            });

            load();
          })();

          form.addEventListener('submit', ()=>{
            const repeaters = [timelineRepeater, skillsRepeater, testimonialsRepeater, notesRepeater].filter(Boolean);
            repeaters.forEach(({ list, hidden }) => {
              const values = Array.from(list.querySelectorAll('input[type="text"]')).map(i=>i.value.trim()).filter(Boolean);
              hidden.value = values.join('\n');
            });
          });
        })();
      </script>
    </form>
  </section>
</main>
<%- include('partials/layout-end') %>
